devtools::install_github("stefanangrick/oemdlRtools")
library("devtools")
dr_github("stefanangrick/oemdlRtools")
library("devtools")
dr_github("stefanangrick")
?install_github
remotes::install_github("stefanangrick/oemdlRtools")
update_packages('devtools')
devtools::install_github("stefanangrick/oemdlRtools")
?install.packages
Sys.getenv()
R.Version()
devtools::install_github("stefanangrick/oemdlRtools",args = "--no-test-load")
?install_git
install_github("stefanangrick/oemdlRtools@master")
library('devtools')
install_github("stefanangrick/oemdlRtools@master")
library('devtools')
install_github("stefanangrick/oemdlRtools@master")
library('devtools')
install_github("stefanangrick/oemdlRtools@master")
libpaths()
library('devtools')
library('roxygen2')
install.packages('updateR')
install.packages(c("basictabler", "berryFunctions", "BiocManager", "bitops", "brio", "broom", "bslib", "cachem", "callr", "caTools", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "desc", "devtools", "diffobj", "dplyr", "DT", "ellipsis", "fansi", "farver", "forecast", "gert", "ggforce", "ggplotify", "gh", "gtools", "haven", "highr", "hms", "htmlTable", "httpuv", "igraph", "isoband", "jquerylib", "KFAS", "knitr", "later", "lavaan", "lubridate", "magick", "MatrixModels", "matrixStats", "midasr", "mvtnorm", "openssl", "optimx", "pillar", "pkgload", "plotly", "processx", "ps", "quantreg", "RcppArmadillo", "RCurl", "readabs", "remotes", "reprex", "rJava", "rlang", "rmarkdown", "rversions", "rvest", "sandwich", "sass", "seasonal", "SparseM", "stringi", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "tweenr", "utf8", "vctrs", "viridisLite", "waldo", "withr", "writexl", "x13binary", "xfun", "XLConnect", "xlsx", "XML", "zip", "zoo"))
install.packages(c("Matrix", "mgcv"), lib="C:/R/R-4.1.0/library")
library('devtools')
remove.packages('devtools')
install.packages('devtools')
install.packages('devtools', dependencies = T)
list.of.packages <- c("dplyr","plyr","tidyr","timeDate","ggplot2","lubridate","readxl",
"tidyverse",'magrittr','gridExtra',
"leaps","tseries","urca","writexl",
"reshape2","cowplot","ggplotify",
"scales","readabs","caTools","zoo",
'rmarkdown','rstudioapi')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) {install.packages(new.packages)}
invisible(lapply(list.of.packages, require, character.only = TRUE))
list.of.packages <- c("dplyr","plyr","tidyr","timeDate","ggplot2","lubridate","readxl",
"tidyverse",'magrittr','gridExtra',
"leaps","tseries","urca","writexl",
"reshape2","cowplot","ggplotify",
"scales","readabs","caTools","zoo",
'rmarkdown','rstudioapi')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) {install.packages(new.packages)}
install.packages(new.packages)
library('devtools')
install.packages('devtools')
library('devtools')
library(readr)
library(nlme)
library(fpp2)
url_file <- 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv'
owid <- read_csv(url(url_file))
d2 <- filter(owid,iso_code=='AUS') %>% select(.,date, total_vaccinations, new_vaccinations, new_vaccinations_smoothed,
people_vaccinated, people_fully_vaccinated)
library('oxgraphs')
ox_setup()
names(d2)[1] <- 'Dates'
d2$pop <- 20619959
d2$people_partial_vax <- d2$people_vaccinated-d2$people_fully_vaccinated
f <- d2[!is.na(d2$total_vaccinations),]
f$partial_share <- f$people_vaccinated/f$total_vaccinations
f$partial_share[f$Dates<='2021-03-14'] <- 1
f$partial_share <- na.approx(f$partial_share)
f$ppl_vax <- f$partial_share*f$total_vaccinations
f$partial_share_ppl <- f$people_partial_vax/f$ppl_vax
f$partial_share_ppl[f$Dates<='2021-03-14'] <- 1
f$partial_share_ppl <- na.approx(f$partial_share_ppl)
f$part_vax <- f$partial_share_ppl*f$ppl_vax
f$full_vax <- f$ppl_vax-f$part_vax
dc <- select(f,Dates,part_vax,full_vax) %>% w2l()
dc$value <- dc$value/1000
dc$value <- dc$value/d2$pop[1]*100000
ox_line_graph(dc,'Vaccination coverage','% of population aged 16+',c('15/2/2021','15/9/2021'),c(0,35,5),
x_break='1 months',x_format='%b %y',x_seq=2,leg=c('Partially vaccinated','Fully vaccinated'),
srce='Source: Our World in Data, BIS Oxford Economics')
library(readr)
library(nlme)
library(fpp2)
url_file <- 'https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv'
owid <- read_csv(url(url_file))
d2 <- filter(owid,iso_code=='AUS') %>% select(.,date, total_vaccinations, new_vaccinations, new_vaccinations_smoothed,
people_vaccinated, people_fully_vaccinated)
names(d2)[1] <- 'Dates'
d2$pop <- 20619959
d2$people_partial_vax <- d2$people_vaccinated-d2$people_fully_vaccinated
f <- d2[!is.na(d2$total_vaccinations),]
f$partial_share <- f$people_vaccinated/f$total_vaccinations
f$partial_share[f$Dates<='2021-03-14'] <- 1
f$partial_share <- na.approx(f$partial_share)
f$ppl_vax <- f$partial_share*f$total_vaccinations
f$partial_share_ppl <- f$people_partial_vax/f$ppl_vax
f$partial_share_ppl[f$Dates<='2021-03-14'] <- 1
f$partial_share_ppl <- na.approx(f$partial_share_ppl)
f$part_vax <- f$partial_share_ppl*f$ppl_vax
f$full_vax <- f$ppl_vax-f$part_vax
dc <- select(f,Dates,part_vax,full_vax) %>% w2l()
dc$value <- dc$value/1000
dc$value <- dc$value/d2$pop[1]*100000
ox_line_graph(dc,'Vaccination coverage','% of population aged 16+',c('15/2/2021','15/9/2021'),c(0,35,5),
x_break='1 months',x_format='%b %y',x_seq=2,leg=c('Partially vaccinated','Fully vaccinated'),
srce='Source: Our World in Data, BIS Oxford Economics')
f <- filter(owid,iso_code=='AUS') %>% select(.,date, iso_code, total_vaccinations, new_vaccinations, new_vaccinations_smoothed,
people_vaccinated, people_fully_vaccinated, population)
d2 <- select(owid,date, iso_code, total_vaccinations, new_vaccinations, new_vaccinations_smoothed,
people_vaccinated, people_fully_vaccinated, population)
names(f)[1] <- 'Dates'
names(d2)[1] <- 'Dates'
f$people_partial_vax <- f$people_vaccinated-f$people_fully_vaccinated
f <- f[!is.na(f$total_vaccinations),]
f$partial_share <- f$people_vaccinated/f$total_vaccinations
f$partial_share[f$Dates<='2021-03-14'] <- 1
f$partial_share <- na.approx(f$partial_share)
f$ppl_vax <- f$partial_share*f$total_vaccinations
f$partial_share_ppl <- f$people_partial_vax/f$ppl_vax
f$partial_share_ppl[f$Dates<='2021-03-14'] <- 1
f$partial_share_ppl <- na.approx(f$partial_share_ppl)
f$part_vax <- f$partial_share_ppl*f$ppl_vax
f$full_vax <- f$ppl_vax-f$part_vax
f$vax_rate <- f$full_vax/f$population*100
f$vax_pace = f$new_vaccinations_smoothed/f$population*100
f$vax_share = f$ppl_vax/f$population*100
f$full_vax_share = f$full_vax/f$population*100
d2$vax_rate <- d2$people_fully_vaccinated/d2$population*100
e <- rbind(filter(d2,iso_code!='AUS') %>% select(.,Dates,iso_code,vax_rate,total_vaccinations),
select(f,Dates,iso_code,vax_rate,total_vaccinations)) %>% as.data.frame()
e[is.na(e)] <- 0
ox_colours <- ox_pallette()
ox_point_theme<- function(leg_pos,oxscale=1,flip=0){
if(flip==1){pm <- margin(0,30,0,5)*oxscale}else{pm <- margin(0,10,0,5)*oxscale}
theme_cowplot()+
theme(text = element_text(angle=0,size=20*oxscale,face="plain",colour="black"),
line = element_line(colour="black",size=1*oxscale),
axis.title.y.left = element_text(angle = 0,margin=unit(c(0,-1.3,0,0.75)*oxscale, "cm")),
axis.title.y.right = element_text(angle=0,vjust=1,hjust=0,margin=unit(c(0,0,0,-2.5)*oxscale, "cm")),
axis.title.x = element_text(angle = 0,margin=unit(c(0,0,0.25,0), "cm")),
axis.ticks = element_line(size=1*oxscale),
axis.ticks.length=unit(0.15*oxscale, "cm"),
axis.text = element_text(angle = 0,colour="black",size=20*oxscale),
axis.text.x = element_text(margin=unit(c(0.35,0.35,0,0.5)*oxscale, "cm")),
axis.text.y = element_text(margin=unit(c(0.5,0.35,0.5,0.5)*oxscale, "cm")),
axis.text.y.right= element_text(margin=unit(c(0.5,0.5,0.5,0.35)*oxscale, "cm")),
axis.line.x = element_line(size=1*oxscale),
axis.line.y = element_line(size=1*oxscale),
legend.key = element_rect(colour=NA, fill=NA),
legend.margin = margin(0,0,0,0),
legend.text = element_text(size = 20*oxscale),
legend.title = element_blank(),
legend.background = element_rect(fill=alpha('white', 0)),
legend.spacing.x = unit(0,'cm'),
legend.spacing.y = unit(0,'cm'),
legend.position=leg_pos,
plot.title = element_text(margin=unit(c(0.2,0,0.15,0)*oxscale,"cm"),size=28*oxscale, face = "bold",hjust=0.0),
plot.subtitle=element_text(hjust=0.0,margin=unit(c(0.15,0,0.5,0)*oxscale,"cm"),size=20*oxscale),
plot.caption=element_text(hjust=0.0,size=18*oxscale,margin=unit(c(0,0,0.15,0)*oxscale,"cm")),
plot.margin = pm,
panel.background = element_rect(fill = "white")
)
}
g <- select(owid,date, iso_code, total_vaccinations, new_vaccinations_smoothed, new_vaccinations,
people_vaccinated, people_fully_vaccinated, population)
names(g)[1] <- 'Dates'
g <- mutate(g, vax_pace = new_vaccinations_smoothed/population*100,
vax_share = people_vaccinated/population*100,
full_vax_share = people_fully_vaccinated/population*100)
h <- rbind(filter(g,iso_code!='AUS') %>% select(.,Dates, iso_code, vax_pace, vax_share, full_vax_share),
select(f, Dates, iso_code, vax_pace, vax_share, full_vax_share)) %>% as.data.frame()
tmp <- filter(h, iso_code %in% c('AUS','CAN','USA','OWID_EUN','ISR','GBR'))
j <- ggplot() +
geom_path(data=tmp, aes(vax_share, vax_pace, group = iso_code, colour = iso_code),size = 1.05833)+
ox_point_theme(c(0.55,0.9))+
labs(y = "", x = '% of population at least partially vaccinated', caption = 'Source: Our World in Data, BIS Oxford Economics',
title = 'Vaccination progress', subtitle = 'Share of population vaccinated daily') +
scale_colour_manual(values = ox_colours,labels=c('Australia', 'Canada', 'UK', 'Israel', 'EU', 'USA')) +
scale_y_continuous(breaks = seq(0, 2.5, 0.5), limits = c(0,2.5),expand=c(0,0)) +
scale_x_continuous(breaks = seq(0, 79, 20), limits = c(0,80),expand=c(0,0))
j <- titles_left(j)
j
path <- 'C:/OEF/Recurring files'
library(oxgraphs)
library(oxgraphs)
ox_setup()
?read_oedb
21154/17693*100-100
6160/1.06
difftime('24/6/2021',today())
difftime('24/6/2021','29/6/2021')
difftime('29/6/2021','24/6/2021')
difftime('29/6/2021','6/8/2021')
difftime('6/29/2021','8/6/2021')
difftime('29-9-2021','6-8-2021')
difftime('9-29-2021','8-6-2021')
?seasonal
source("S:/Economics/Subscriptions/Australia Macro Service/Research Briefings/October 2021/China_trade/china_trade_oct21.R", echo=TRUE)
#Change in share to China vs overall growth
tot_y_avg_td <- extract_by_digit(tot_y_avg,d=2) %>% w2l()
tot_y_avg_td$Dates <- tot_y_avg_td$variable %>% as.character()
tot_y_avg_td$variable <- 'growth' %>% as.factor()
ch_sh_df <- ch_share_diff
ch_sh_df$Dates <- ch_sh_df$variable %>% as.character()
ch_sh_df$variable <- 'share_change' %>% as.factor()
ch_sh_df %<>% select(.,-category)
sh_gr <- rbind(tot_y_avg_td,ch_sh_df)
ox_scatter_graph(sh_gr,'Exports - Year to August 2021',x_range = c(-60,120,30), y_range = c(-60,30,10),
x_var='growth',y_var='share_change',lobf = 1,
xlab = '% change in category total exports', ylab = 'ppt change in share\n of exports to China',
srce='Sources: ABS, BIS Oxford Economics')
sh_gr
View(sitc_names)
View(tot_t)
View(tot_y_avg)
tot_t$`22` %>% tail(.n=24)
tot_t$`22` %>% tail(.p=24)
tot_t$`22`
?tail
View(tot_t)
View(sh_gr)
ox_scatter_graph(sh_gr %>% filter(.,!(Dates=='22')),'Exports - Year to August 2021',x_range = c(-60,120,30), y_range = c(-60,30,10),
x_var='growth',y_var='share_change',lobf = 1,
xlab = '% change in category total exports', ylab = 'ppt change in share\n of exports to China',
srce='Sources: ABS, BIS Oxford Economics')
sh_gr
lm(growth~share_change, data=sh_gr)
sh_gr
sh_gr %>% l2w()
z <- sh_gr %>% l2w()
lm(growth~share_change, data=z)
ox_scatter_graph(sh_gr,'Exports - Year to August 2021',x_range = c(-60,120,30), y_range = c(-60,30,10),
x_var='growth',y_var='share_change',lobf = 1,
xlab = '% change in category total exports', ylab = 'ppt change in share\n of exports to China',
srce='Sources: ABS, BIS Oxford Economics')
lm(growth~share_change, data=z %>% filter(.,!(Dates=='22')) )
lm(growth~share_change, data=z )
lm(growth~share_change, data=z %>% filter(.,!(Dates=='22')) )
z1 <- lm(growth~share_change, data=z )
z2 <- lm(growth~share_change, data=z %>% filter(.,!(Dates=='22')) )
summarysummary(z1)
summary(z1)
summary(z2)
View(Coal)
ox_line_graph(coal,'Coal exports', '$m', c(2015,2020), c(0,6,1), x_seq=1)
coal <- lapply('Coal',get_commod,m) %>% as.data.frame() %>% w2l()
coal$value <- coal$value/1000000
ox_line_graph(coal,'Coal exports', '$m', c(2015,2020), c(0,6,1), x_seq=1)
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','% of total',c(2015,2021),c(0,60,10),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95))
cl_vol <- data_import('Haver', hvr_start = 2015, hvr_end=2021, hvr_codes=c('AUNOXCLM','AUNOXCLT')) %>% l2w()
tmp1 <- cl_vol %>% mutate(.,vols = aunoxclm + aunoxclt) %>% select(.,Dates,vols) %>% w2l()
tmp2 <- Coal[,-2] %>% w2l() %>% trail_avg(.,p=3)
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','% of total',c(2015,2021),c(0,60,10),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95)),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','% of total',c(2015,2021),c(0,60,10),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95))
ox_line_graph(coal,'Coal exports', '$m', c(2015,2020), c(0,6,1), x_seq=1)
coal <- lapply('Coal',get_commod,m) %>% as.data.frame()
View(coal)
coal$other <- rowSums(coal[,-c(1,2)])
coal <- coal %>% w2l()
coal$value <- coal$value/1000000
ox_line_graph(coal,'Coal exports', '$m', c(2015,2020), c(0,6,1), x_seq=1)
coal <- lapply('Coal',get_commod,m) %>% as.data.frame()
coal$other <- coal$Coal - rowSums(coal[,-c(1,2)])
coal <- coal %>% w2l()
coal$value <- coal$value/1000000
ox_line_graph(coal,'Coal exports', '$m', c(2015,2020), c(0,6,1), x_seq=1)
ox_line_graph(coal %>% filter(.,!(variable=='Coal')),'Coal exports', '$m', c(2015,2020), c(0,6,1), x_seq=1)
ox_line_graph(coal %>% filter(.,!(variable=='Coal')),'Coal exports', '$m', c(2015,2020), c(0,2,0.5), x_seq=1)
ox_line_graph(coal %>% filter(.,!(variable=='Coal')),'Coal exports', '$m', c(2015,2021), c(0,2,0.5), x_seq=1)
tmp1 <- cl_vol %>% mutate(.,vols = aunoxclm + aunoxclt) %>% select(.,Dates,vols) %>% w2l()
tmp2 <- coal %>% filter(.,!(variable=='Coal')) %>% trail_avg(.,p=3)
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c(2015,2021),c(0,2,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95)),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c(2015,2021),c(0,2,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ed <- tmp2$Dates %>% max() %m+% days(30)
ed <- paste0(day(ed),'/',month(ed),'/',year(ed))
ed <- tmp2$Dates %>% max() %m+% days(30)
ed <- paste0(day(ed),'/',month(ed),'/',year(ed))
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c('1/1/2015',ed),c(0,2,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_save('Coal')
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c('1/1/2015',ed),c(0,2,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95))
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c('1/1/2015',ed),c(0,2,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_save('Coal')
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c('1/1/2015',ed),c(0,2.5,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(50,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m',c('1/1/2015',ed),c(0,2.5,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(60,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m, smoothed',c('1/1/2015',ed),c(0,2.5,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(60,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_save('Coal')
ox_line_graph(rbind(tmp1,tmp2),'Coal exports by destination','$m, values, smoothed',c('1/1/2015',ed),c(0,2.5,0.5),
x_seq=1,rhs_var = 'vols',rh_units = 'Mt', y2_range=c(60,110,10), leg_col = 2, leg_pos = c(0.05,0.95),
leg=c('Total volumes (RHS)', 'China', 'India', 'Japan', 'South Korea', 'Other'))
ox_save('Coal')
z <- vs_gr
z1 <- lm(growth~vs, data=z )
View(vs_gr)
z1 <- lm(growth~vul_score, data=z )
z <- vs_gr
z <- vs_gr %>% l2w()
z1 <- lm(growth~vul_score, data=z )
sum(zq)
sum(z1)
summary(z1)
vs_gr
z2 <- lm(growth~share_change, data=z %>% filter(.,!(Dates=='22')) )
z2 <- lm(growth~vul_score, data=z %>% filter(.,!(Dates=='22')) )
summary(z2)
library('oxgraphs')
ox_setup()
setwd('C:/Users/Sean Langcake/Desktop/Tmp files')
trial_oxoedb <- function(db,sect='AUS',vars=NULL,mod_dir='C:/OEF',ms=NULL){
if(!is.null(sect)){
if(length(sect)==1){
if(sect=='AUS'){
if(is.null(vars)){
print(paste0('Importing all Australian variables from ',db))
}else{
print(paste0('Importing ',vars,' for Australia from ',db))
}
a <- read_oedb(db,sector=c('AUSTRALI','AUS_DET'),mnemonic=vars,model_dir=mod_dir,as_xts=0,fix_call=FALSE,mnemonic_sector=ms)
} }else{
if(is.null(vars)){
print(paste0('Importing all variables for ',sect,' from ',db))
}else{
print(paste0('Importing ',vars,' for ',sect,' from ',db))
}
a <- read_oedb(db,sector=sect,mnemonic=vars,model_dir=mod_dir,as_xts=0,fix_call=FALSE,mnemonic_sector=ms)
}
}else{
if(is.null(vars)){
print(paste0('Attempting to import all variables for all sectors from ',db))
print('***NOT RECOMMENDED***')
}else{
print(paste0('Importing ',vars,' for all sectors from ',db))
}
a <- read_oedb(db,sector=sect,mnemonic=vars,model_dir=mod_dir,as_xts=0,fix_call=FALSE,mnemonic_sector=ms)
}
data <- a$dat
colnames(data)[1] = 'Dates'
data <- data %>% melt(.,'Dates')
if(length(sect)==1){
if(!is.null(sect)){
if(sect=='AUS'){data$variable <- data$variable %>% gsub("_AUSTRALI","",.)%>% gsub("_AUS_DET","",.)
}
}
}
month(data$Dates) <- month(data$Dates)+2
data$variable <- .revert_names(data$variable)
b <- a$last_hist %>% as.data.frame()
colnames(b) <- 'hist_end'
b$variable <- names(a$last_hist) %>% .revert_names()
b$hist_end <- data$Dates[b$hist_end]
if(length(sect)==1){
if(!is.null(sect)){
if(sect=='AUS'){b$variable <- b$variable %>% gsub("_AUSTRALI","",.)%>% gsub("_AUS_DET","",.)
}
}
}
rownames(b) <- c()
# month(b$hist_end) <- month(b$hist_end)+2
br <- b
br$variable <- paste0(br$variable, " (RHS)")
b <- rbind(b, br)
h_end <- select(b,variable,hist_end)
is_pct <- a$var$Indicator %>% .revert_names() %>% gsub("_AUSTRALI","",.)%>% gsub("_AUS_DET","",.) %>% as.data.frame()
is_pct$is_pct <- a$var$Is.percent
colnames(is_pct)[1] <- 'variable'
x <- list(data,h_end,is_pct)
return(x)
}
x <- trial_oxoedb(db)
setwd('C:/Users/Sean Langcake/Desktop/Tmp files')
db <- 'C:/OEF/Oct21/AMS_Macro.db'
x <- trial_oxoedb(db)
.revert_names <- function(x) {
x <- gsub("exc","\\!",x)
x <- gsub("pct","\\%",x)
x <- gsub("usd","\\$",x)
return(x)
}
.revert_names <- function(x) {
x <- gsub("exc","\\!",x)
x <- gsub("pct","\\%",x)
x <- gsub("usd","\\$",x)
return(x)
}
x <- trial_oxoedb(db)
View(x)
?read_oedb
var_res = 'V'
edit(ox_line_graph)
if(!(var_res %in% c('V','R'))){
stop("var_res needs to be set to V or R")
}
var_res = 1
if(!(var_res %in% c('V','R'))){
stop("var_res needs to be set to V or R")
}
var_res = V
var_res = 'V'
if(!(var_res %in% c('V','R'))){
stop("var_res needs to be set to 'V' or 'R'")
}
trial_oxoedb <- function(db,sect='AUS',vars=NULL,mod_dir='C:/OEF',ms=NULL, var_res = 'V'){
if(!(var_res %in% c('V','R'))){
stop("var_res needs to be set to 'V' or 'R'")
}
if(!is.null(sect)){
if(length(sect)==1){
if(sect=='AUS'){
if(is.null(vars)){
print(paste0('Importing all Australian variables from ',db))
}else{
print(paste0('Importing ',vars,' for Australia from ',db))
}
a <- read_oedb(db,sector=c('AUSTRALI','AUS_DET'),
mnemonic=vars,
model_dir=mod_dir,
as_xts=0,
fix_call=FALSE,
mnemonic_sector=ms,
type = var_res)
} }else{
if(is.null(vars)){
print(paste0('Importing all variables for ',sect,' from ',db))
}else{
print(paste0('Importing ',vars,' for ',sect,' from ',db))
}
a <- read_oedb(db,sector=sect,
mnemonic=vars,
model_dir=mod_dir,
as_xts=0,
fix_call=FALSE,
mnemonic_sector=ms,
type = var_res)
}
}else{
if(is.null(vars)){
print(paste0('Attempting to import all variables for all sectors from ',db))
print('***NOT RECOMMENDED***')
}else{
print(paste0('Importing ',vars,' for all sectors from ',db))
}
a <- read_oedb(db,sector=sect,
mnemonic=vars,
model_dir=mod_dir,
as_xts=0,
fix_call=FALSE,
mnemonic_sector=ms,
type = var_res)
}
data <- a$dat
colnames(data)[1] = 'Dates'
data <- data %>% melt(.,'Dates')
if(length(sect)==1){
if(!is.null(sect)){
if(sect=='AUS'){data$variable <- data$variable %>% gsub("_AUSTRALI","",.)%>% gsub("_AUS_DET","",.)
}
}
}
month(data$Dates) <- month(data$Dates)+2
data$variable <- .revert_names(data$variable)
b <- a$last_hist %>% as.data.frame()
colnames(b) <- 'hist_end'
b$variable <- names(a$last_hist) %>% .revert_names()
b$hist_end <- data$Dates[b$hist_end]
if(length(sect)==1){
if(!is.null(sect)){
if(sect=='AUS'){b$variable <- b$variable %>% gsub("_AUSTRALI","",.)%>% gsub("_AUS_DET","",.)
}
}
}
rownames(b) <- c()
# month(b$hist_end) <- month(b$hist_end)+2
br <- b
br$variable <- paste0(br$variable, " (RHS)")
b <- rbind(b, br)
h_end <- select(b,variable,hist_end)
is_pct <- a$var$Indicator %>% .revert_names() %>% gsub("_AUSTRALI","",.)%>% gsub("_AUS_DET","",.) %>% as.data.frame()
is_pct$is_pct <- a$var$Is.percent
colnames(is_pct)[1] <- 'variable'
x <- list(data,h_end,is_pct)
return(x)
}
x <- trial_oxoedb(db)
y <- trial_oxoedb(db, var_res = 'R')
View(y)
res <- y[[1]] %>% l2w()
View(res)
rm(list=ls())
remove.packages('oxgraphs')
library('devtools')
library('roxygen2')
setwd('C:/R/Graphing/oxgraphs')
# rm *.rdb
document()
